// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

let cart = [];

const products = [
    {
        id: 1,
        name: 'AirPods Pro',
        price: 19990,
        image: 'https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/MTJV3?wid=1144&hei=1144&fmt=jpeg&qlt=90&.v=1694014871985',
        link: 'airpods-pro.html'
    },
    {
        id: 2,
        name: 'MagSafe Charger',
        price: 4990,
        image: 'https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/MHXH3?wid=1144&hei=1144&fmt=jpeg&qlt=90&.v=1661269972367',
        link: 'magsafe-charger.html'
    },
    {
        id: 3,
        name: 'Apple Watch Band',
        price: 5990,
        image: 'https://github.com/Erofaxxx/Vlad_store/blob/main/chehol.jpeg?raw=true',
        link: 'apple-watch-band.html'
    }
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function initializeCart() {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
    }
    updateCartCount();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ localStorage
function saveCart() {
    localStorage.setItem('cart', JSON.stringify(cart));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCount() {
    const countElements = document.querySelectorAll('#cartCount');
    const total = cart.reduce((sum, item) => sum + item.quantity, 0);
    countElements.forEach(el => el.textContent = total);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;

    const existingItem = cart.find(item => item.id === productId);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({ ...product, quantity: 1 });
    }

    saveCart();
    updateCartCount();
    showNotification(`${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message) {
    const notification = document.getElementById('notification');
    notification.textContent = message;
    notification.style.display = 'block';
    setTimeout(() => {
        notification.style.display = 'none';
    }, 3000);
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts() {
    const productsGrid = document.querySelector('.products-grid');
    if (!productsGrid) return;

    productsGrid.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º

    products.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'product-card';
        productCard.innerHTML = `
            <a href="${product.link}">
                <img src="${product.image}" class="product-image" alt="${product.name}">
            </a>
                <h3>${product.name}</h3>
                <p>${product.price.toLocaleString()} ‚ÇΩ</p>
            
            <button onclick="addToCart(${product.id})">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
        `;
        productsGrid.appendChild(productCard);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    initializeCart();
    renderProducts(); // –í—ã–∑—ã–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤
});







// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
async function sendToTelegram(orderData) {
    const botToken = '7871106121:AAGVfUJMm6s4RK0kTYJSoMh6ejw5J5BKLnE'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    const chatIds = ['790984069', '1184550715']; // –í–∞—à chat_id –∏ chat_id –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = `
        –ù–æ–≤—ã–π –∑–∞–∫–∞–∑! üõçÔ∏è
        –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}
        Telegram: ${orderData.telegram}
        –ê–¥—Ä–µ—Å: ${orderData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}
        –¢–æ–≤–∞—Ä—ã:
        ${orderData.cart.map(item => `- ${item.name} (${item.quantity} —à—Ç.)`).join('\n')}
        –ò—Ç–æ–≥–æ: ${orderData.total.toLocaleString()} ‚ÇΩ
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–º chat_id
    try {
        const sendPromises = chatIds.map(chatId => {
            return fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: message,
                }),
            });
        });

        // –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        const results = await Promise.all(sendPromises);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –∑–∞–ø—Ä–æ—Å—ã —É—Å–ø–µ—à–Ω—ã
        const allSuccess = results.every(response => response.ok);
        return allSuccess;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        return false;
    }
}